{"version":3,"sources":["assets/images/CS1.png","assets/images/PG1.png","assets/images/WP1.png","assets/images/FT.png","assets/images/me.jpg","components/Projects.jsx","components/About.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","div","className","initial","opacity","animate","transition","duration","src","WP1","alt","href","target","rel","PG1","CS1","FT","About","me","App","useState","minimized","setMinimized","currentPage","setCurrentPage","handleNav","page","role","onClick","icon","faGithub","faLinkedin","faEnvelope","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b24a2a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CS1.6f185a89.png\";","module.exports = __webpack_public_path__ + \"static/media/PG1.7426f2f5.png\";","module.exports = __webpack_public_path__ + \"static/media/WP1.d30ef536.png\";","module.exports = __webpack_public_path__ + \"static/media/FT.5d5a061b.png\";","module.exports = __webpack_public_path__ + \"static/media/me.0d54aa7b.jpg\";","import React from 'react'\nimport './Projects.scss'\nimport CS1 from '../assets/images/CS1.png'\nimport PG1 from '../assets/images/PG1.png'\nimport WP1 from '../assets/images/WP1.png'\nimport FT from '../assets/images/FT.png'\nimport { motion } from \"framer-motion\"\n\n\nexport default function Projects() {\n    return (\n        <motion.div className='projects-container'\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 1.5 }}\n        >\n            <div className='project-row'>\n                <div className='project-card-1'>\n                    <img src={WP1} alt=\"Workout Pal App\"/>\n                    <div>\n                        <span className='card-text'> \n                            <h3>Workout Pal</h3>\n                            <p>Workout and Exercise Logging App built with React and Node</p>\n                            <a href='https://github.com/dsawyer13/workout-pal' target='_blank' rel='noreferrer noopener' alt='GitHub'>Code</a>\n                        </span>\n                    </div>\n                </div>\n\n                <div className='project-card-2'>\n                    <img src={PG1} alt=\"ProGift App\" />\n                    <div>\n                        <span className='card-text'> \n                            <h3>ProGift</h3>\n                            <p>Gift Regsitry App with Authentication built with jQuery and Node</p>\n                            <a href='https://github.com/dsawyer13/pro-gift' target='_blank' rel='noreferrer noopener' alt='GitHub'>Code</a>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div className='project-row'>\n                <div className='project-card-3'>\n                    <img src={CS1} alt=\"ConSearch App\" />\n                    <div>\n                        <span className='card-text'> \n                            <h3>ConSearch</h3>\n                            <p>An App to search for Concerts and Music built with React Hooks</p>\n                            <a href='https://github.com/dsawyer13/consearch' target='_blank' rel='noreferrer noopener' alt='GitHub'>Code</a>\n                        </span>\n                    </div>\n                </div>\n\n                <div className='project-card-4'>\n                    <img src={FT} alt=\"Flask Todo App\" />\n                    <div>\n                        <span className='card-text'> \n                            <h3>Flask Todo</h3>\n                            <p>A simple Todo app built with Flask and Python</p>\n                            <a href='https://github.com/dsawyer13/flask-todo' target='_blank' rel='noreferrer noopener' alt='GitHub'>Code</a>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport './About.scss'\nimport me from '../assets/images/me.jpg'\nimport { motion } from \"framer-motion\"\n\n\nexport default function About() {\n    return (\n        <motion.div className='about-section'\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 1.5 }} \n        >\n            <div className='about-container'>\n                <div className='about-text'>\n                    <p>\n                        Hi, I'm Dylan!  I make websites for a living.<br />\n                        Although I am most experienced with Javascript—I love learning—and will pick up the right tools for the job.\n                    </p>\n                    <p>\n                        When I'm not programming, you can find me playing Teamfight Tactics, at the Gym, or building mechanical keyboards.\n                    </p>\n\n                </div>\n                <img src={me} target='_blank' rel=\"noreferrer noopener\" alt='Me'/>\n            </div>\n        </motion.div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport './App.scss'\nimport Projects from './components/Projects'\nimport About from './components/About'\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\"\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { motion } from \"framer-motion\"\n\n\n\nfunction App() {\n  const [minimized, setMinimized] = useState(false)\n  const [currentPage, setCurrentPage] = useState('home')\n\n  const handleNav = (page) => {\n    if (page === 'home') {\n      setMinimized(false)\n      setCurrentPage(page)\n    } else {\n      setMinimized(true)\n      setCurrentPage(page)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <nav role='navigation'>\n        <p className='text--yellow' onClick={() => handleNav('home')}>Home</p>\n        <p className='text--green' onClick={() => handleNav('projects')}>Projects</p>\n        <p className='text--red' onClick={() => handleNav('about')}>About</p>\n      </nav>\n      {/* Make minimized a conditional style */}\n      <motion.div \n        className={`text--home ${minimized ? 'minimized' : ''}`}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1.5 }}\n        >\n        <div>\n          <h1>Dylan Sawyer</h1>\n          <h2>&#60;Web Developer&#8725;&#62;</h2>\n        </div>\n        <ul className='social-links'>\n          <a href='https://github.com/dsawyer13' target='_blank' rel='noreferrer noopener'><FontAwesomeIcon icon={faGithub} /></a>\n          <a href='https://www.linkedin.com/in/dylan-sawyer13' target='_blank' rel='noreferrer noopener'><FontAwesomeIcon icon={faLinkedin} /></a>\n          <a href='mailto:sawyer.dylan@aol.com'><FontAwesomeIcon icon={faEnvelope} /></a>\n        </ul>\n      </motion.div>\n      {!minimized\n        ? null\n        : (currentPage === 'projects')\n        ? <Projects />\n        : <About />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}